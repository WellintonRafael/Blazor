@page "/ListOfStudents"

@using PedrinhoLindo.Data;
@using PedrinhoLindo.Models;
@using PedrinhoLindo.Service;

@inject IFuncionarioService FuncionarioService
@inject NavigationManager NavManager

<h1>List of Students</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (funcionarios == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Nome</th>
                    <th>Login</th>
                    <th>Senha</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var funcionario in funcionarios)
                {
                    <tr>
                        <td>@funcionario.Cod_funcionario</td>
                        <td>@funcionario.Nome</td>
                        <td>@funcionario.Login</td>
                        <td>@funcionario.Senha</td>
@*                        <td>
                            <button type="submit" @onclick="@(() => EditFuncionario(funcionario.Cod_funcionario))" class="mt-2 btn btn-primary">Edit</button>
                        </td>*@
@*                        <td>
                            <button type="submit" @onclick="@(()=> DeleteFuncionario(funcionario))" class="btn btn-primary">Delete</button>

                        </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>    
}

@code {
    private List<TB_FUNCIONARIOS> funcionarios;

    protected override async Task OnInitializedAsync()
    {
        funcionarios = await FuncionarioService.GetAllFuncionarios();
    }

    private async void DeleteFuncionario(TB_FUNCIONARIOS funcionario)
    {
        var response = await FuncionarioService.DeleteFuncionario(funcionario);

        if (response > 0)
        {
            await OnInitializedAsync();
            this.StateHasChanged();
        }
    }

    private void EditFuncionario(string codFuncionario)
    {
        NavManager.NavigateTo($"updateStudent/{codFuncionario}");
    }
}
