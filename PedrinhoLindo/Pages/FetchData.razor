@page "/ListOfStudents"

@using PedrinhoLindo.Data
@using PedrinhoLindo.Models;
@using PedrinhoLindo.Service;

@inject IStudentService StudentService
@inject NavigationManager NavManager

<h1>List of Students</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>E-mail</th>
                    <th>Gender</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var student in students)
                {
                    <tr>
                        <td>@student.Name</td>
                        <td>@student.Email</td>
                        <td>@student.Gender</td>
                        <td>
                            <button type="submit" @onclick="@(() => EditStudent(student.Id))" class="mt-2 btn btn-primary">Edit</button>
                        </td>
                        <td>
                            <button type="submit" @onclick="@(()=> DeleteStudent(student))" class="btn btn-primary">Delete</button>

                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>    
}

@code {
    private List<StudentModel> students;

    protected override async Task OnInitializedAsync()
    {
        students = await StudentService.GetAllStudents();
    }

    private async void DeleteStudent(StudentModel student)
    {
        var response = await StudentService.DeleteStudent(student);

        if (response > 0)
        {
            await OnInitializedAsync();
            this.StateHasChanged();
        }
    }

    private void EditStudent(int studentId)
    {
        NavManager.NavigateTo($"updateStudent/{studentId}");
    }
}
